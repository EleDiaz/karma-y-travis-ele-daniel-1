{"version":3,"sources":["webpack:///./assets/js/conversor.js","webpack:///./assets/js/medida.js","webpack:///./assets/js/temperatura.js"],"names":[],"mappings":";;;;;;;;;;;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;;;;;;;;;;;;;;;ACZD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,0EAAyE;AACzE,2EAA0E;AAC1E;AACA;AACA;AACA;AACA,iEAAgE;AAChE;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;;AAEA;AACA,EAAC;;;;;;;ACtED;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,UAAS;;AAET;AACA;AACA,UAAS;;AAET;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,UAAS;;AAET;AACA;AACA,UAAS;;AAET;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,UAAS;;AAET;AACA;AACA,UAAS;;AAET;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,EAAC","file":"main.js","sourcesContent":["var xregexp = require('xregexp');\nvar temperatura = require('./medida');\n\n(function(exports) {\n    \"use strict\";\n    document.getElementById('convert').addEventListener('input', main);\n    function main() {\n        var valor     = document.getElementById('convert').value,\n            elemento  = document.getElementById('converted');\n        elemento.innerHTML = temperatura.Medida.convertir(valor);\n        return false;\n    }\n})(this);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./assets/js/conversor.js\n ** module id = 1\n ** module chunks = 0\n **/","var XRegExp     = require(\"xregexp\");\nvar temperatura = require(\"./temperatura\");\n\n(function(exports) {\n    \"use strict\";\n\n    function Medida(valor,tipo) {\n        if (!tipo) {\n            var param = XRegExp(\"\"\n                                + \"(?<value>       [-+]?\\\\d+ (?:[\\\\.,]\\\\d*)?\\\\s* ) # Get number \\n\"\n                                + \"((e(?<exponent> [-+]?\\\\d+)\\\\s*)?)               # Get Exponent \\n\"\n                                + \"(?<measure>     [a-zA-Z]+)                      # Get kind\");\n            var m = XRegexExp.exec(valor, param);\n            this.valor = parseFloat(m.value) * Math.pow(10, parseInt(m.exponent));\n            this.tipo  = m.measure;\n        }\n        else {\n            this.valor = parseFloat(valor);\n            this.tipo  = tipo;\n        }\n\n    }\n\n    Medida.match = function (input) {\n            var measures = '[a-z]+';\n            var inputRegex = XRegExp(\n                '^(\\\\s*)                                                  # whitespaces \\n'\n                    + '(?<value>       [-+]?\\\\d+ (?:[\\\\.,]\\\\d*)?\\\\s*)     # captures the number   \\n'\n                    + '((e(?<exponent> [-+]?\\\\d+)\\\\s*)?)                  # captures the exponent \\n'\n                    + '(?<tipo>       ' + measures + ')                   # Capture kind of value \\n'\n                    + '((?:\\\\s+to)?\\\\s+ (?<destino>' + measures + '))?    # Get \"to\" syntax \\n'\n                    + '(\\\\s*)$                                            # whitespaces \\n'\n                , 'xi');\n\n            return XRegExp.exec(input, inputRegex);\n    };\n\n    Medida.medidas = {};\n\n    Medida.convertir = function(valor) {\n        var measures = Medida.medidas;\n\n        measures.c = temperatura.Celsius;\n        measures.f = temperatura.Fahrenheit;\n        measures.k = temperatura.Kelvin;\n\n        var match = Medida.match(valor);\n\n        if (match) {\n            var numero = match.value,\n                tipo   =  match.tipo,\n                destino = match.destino;\n            //try {\n                var source = new measures[tipo[0].toLowerCase()](numero);  // new Fahrenheit(32) //asumimos que la priemra letra es el tipo correcto\n                var target = \"to\"+measures[destino[0].toLowerCase()].name; // \"toCelsius\"\n                var checkTarget = new measures[destino[0].toLowerCase()](0);\n                if(!source.check(tipo) || !checkTarget.check(destino)) {\n                  throw \"Error de tipos\";\n                }\n                return source[target]().toFixed(2) + \" \"+target; // \"0 Celsius\"\n            //}\n            /*catch(err) {\n                return 'Desconozco como convertir desde \"'+tipo+'\" hasta \"'+destino+'\"' + err;\n            }*/\n        }\n        else\n            return \"Introduzca una temperatura valida: 330e-1 F to C\";\n    };\n\n    exports.Medida = Medida;\n})(this);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./assets/js/medida.js\n ** module id = 11\n ** module chunks = 0\n **/","var medida = require('./medida');\n\n(function(exports) {\n    \"use strict\";\n\n    function Temperatura(valor, tipo) {\n        medida.Medida.call(this, valor, tipo);\n    }\n\n    function Celsius(valor) {\n        Temperatura.call(this, valor, \"c\");\n    }\n\n    Celsius.prototype = {\n        name: \"Celsius\",\n\n        check: function(tipo) {\n          return tipo.match(/(^c(?:e(?:l(?:s(?:i(?:u(?:s)?)?)?)?)?)?$)/i);\n        },\n\n        toFahrenheit: function() {\n            return ((this.valor * 9/5)+32);\n        },\n\n        toCelsius: function() {\n            return this.valor;\n        },\n\n        toKelvin: function() {\n          return this.valor + 273;\n        }\n    };\n\n    function Fahrenheit(valor) {\n        Temperatura.call(this, valor, \"f\");\n    }\n\n    Fahrenheit.prototype = {\n        name: \"Fahrenheit\",\n\n        check: function(tipo) {\n          return tipo.match(/(^f(?:a(?:h(?:r(?:e(?:n(?:h(?:e(?:i(?:t)?)?)?)?)?)?)?)?)?$)/i);\n        },\n\n        toCelsius: function() {\n            return ((this.valor - 32)*5/9);\n        },\n\n        toFahrenheit: function() {\n            return this.valor;\n        },\n\n        toKelvin: function() {\n          return this.toCelsius(this.valor) + 273;\n        }\n    };\n\n    function Kelvin(valor) {\n        Temperatura.call(this, valor, \"k\");\n    }\n\n    Kelvin.prototype = {\n        name: \"Kelvin\",\n\n        check: function(tipo) {\n          return tipo.match(/(k(?:e(?:l(?:v(?:i(?:n)?)?)?)?)?)/i);\n        },\n\n        toKelvin: function() {\n            return this.valor;\n        },\n\n        toCelsius: function() {\n            return ((this.valor) - 273);\n        },\n\n        toFahrenheit: function() {\n            return ((this.toCelsius(this.valor) * 9/5)+32);\n        }\n    };\n\n    exports.Temperatura = Temperatura;\n    exports.Celsius = Celsius;\n    exports.Fahrenheit = Fahrenheit;\n    exports.Kelvin = Kelvin;\n\n})(this);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./assets/js/temperatura.js\n ** module id = 12\n ** module chunks = 0\n **/"],"sourceRoot":""}