{"version":3,"sources":["webpack:///main.js","webpack:///./assets/js/conversor.js","webpack:///./assets/js/temperatura.js","webpack:///./assets/js/medida.js"],"names":["webpackJsonp","module","exports","__webpack_require__","main","valor","document","getElementById","value","elemento","innerHTML","Medida","convertir","this","Temperatura","tipo","call","Celsius","Fahrenheit","Kelvin","prototype","name","check","match","toFahrenheit","toCelsius","toKelvin","parseFloat","param","XRegExp","m","XRegexExp","exec","Math","pow","parseInt","exponent","measure","input","measures","inputRegex","xregexp","medidas","c","temperatura","f","k","numero","destino","source","toLowerCase","target","checkTarget","toFixed","err"],"mappings":"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","file":"main.js","sourcesContent":["webpackJsonp([0],[\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(1);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar xregexp = __webpack_require__(2)\n\tvar temperatura = __webpack_require__(11);\n\t\n\t(function(exports) {\n\t    \"use strict\";\n\t    function main() {\n\t        var valor     = document.getElementById('convert').value,\n\t            elemento  = document.getElementById('converted');\n\t        elemento.innerHTML = Medida.convertir(valor);\n\t        return false;\n\t    }\n\t    exports.main = main;\n\t})(this);\n\n\n/***/ },\n/* 2 */,\n/* 3 */,\n/* 4 */,\n/* 5 */,\n/* 6 */,\n/* 7 */,\n/* 8 */,\n/* 9 */,\n/* 10 */,\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar medida = __webpack_require__(12);\n\t\n\t(function(exports) {\n\t    \"use strict\";\n\t\n\t    function Temperatura(valor, tipo) {\n\t        Medida.call(this, valor, tipo);\n\t    }\n\t\n\t    function Celsius(valor) {\n\t        Temperatura.call(this, valor, \"c\");\n\t    }\n\t\n\t    Celsius.prototype = {\n\t        name: \"Celsius\",\n\t\n\t        check: function(tipo) {\n\t          return tipo.match(/(^c(?:e(?:l(?:s(?:i(?:u(?:s)?)?)?)?)?)?$)/i);\n\t        },\n\t\n\t        toFahrenheit: function() {\n\t            return ((this.valor * 9/5)+32);\n\t        },\n\t\n\t        toCelsius: function() {\n\t            return this.valor;\n\t        },\n\t\n\t        toKelvin: function() {\n\t          return this.valor + 273;\n\t        }\n\t    };\n\t\n\t    function Fahrenheit(valor) {\n\t        Temperatura.call(this, valor, \"f\");\n\t    }\n\t\n\t    Fahrenheit.prototype = {\n\t        name: \"Fahrenheit\",\n\t\n\t        check: function(tipo) {\n\t          return tipo.match(/(^f(?:a(?:h(?:r(?:e(?:n(?:h(?:e(?:i(?:t)?)?)?)?)?)?)?)?)?$)/i);\n\t        },\n\t\n\t        toCelsius: function() {\n\t            return ((this.valor - 32)*5/9);\n\t        },\n\t\n\t        toFahrenheit: function() {\n\t            return this.valor;\n\t        },\n\t\n\t        toKelvin: function() {\n\t          return this.toCelsius(this.valor) + 273;\n\t        }\n\t    };\n\t\n\t    function Kelvin(valor) {\n\t        Temperatura.call(this, valor, \"k\");\n\t    }\n\t\n\t    Kelvin.prototype = {\n\t        name: \"Kelvin\",\n\t\n\t        check: function(tipo) {\n\t          return tipo.match(/(k(?:e(?:l(?:v(?:i(?:n)?)?)?)?)?)/i);\n\t        },\n\t\n\t        toKelvin: function() {\n\t            return this.valor;\n\t        },\n\t\n\t        toCelsius: function() {\n\t            return ((this.valor) - 273);\n\t        },\n\t\n\t        toFahrenheit: function() {\n\t            return ((this.toCelsius(this.valor) * 9/5)+32);\n\t        }\n\t    };\n\t\n\t    exports.Temperatura = Temperatura;\n\t    exports.Celsius = Celsius;\n\t    exports.Fahrenheit = Fahrenheit;\n\t    exports.Kelvin = Kelvin;\n\t\n\t})(this);\n\n\n/***/ },\n/* 12 */\n/***/ function(module, exports) {\n\n\t(function(exports) {\n\t    \"use strict\";\n\t\n\t    function Medida(valor,tipo) {\n\t        if (!tipo) {\n\t            var param = XRegExp(\"\"\n\t                                + \"(?<value>       [-+]?\\\\d+ (?:[\\\\.,]\\\\d*)?\\\\s* ) # Get number \\n\"\n\t                                + \"((e(?<exponent> [-+]?\\\\d+)\\\\s*)?)               # Get Exponent \\n\"\n\t                                + \"(?<measure>     [a-zA-Z]+)                      # Get kind\");\n\t            var m = XRegexExp.exec(valor, param);\n\t            this.valor = parseFloat(m.value) * Math.pow(10, parseInt(m.exponent));\n\t            this.tipo  = m.measure;\n\t        }\n\t        else {\n\t            this.valor = parseFloat(valor);\n\t            this.tipo  = tipo;\n\t        }\n\t\n\t    }\n\t\n\t    Medida.match = function (input) {\n\t            var measures = '[a-z]+';\n\t\n\t            var inputRegex = xregexp.XRegExp(\n\t                '^(\\\\s*)                                                  # whitespaces \\n'\n\t                    + '(?<value>       [-+]?\\\\d+ (?:[\\\\.,]\\\\d*)?\\\\s*)     # captures the number   \\n'\n\t                    + '((e(?<exponent> [-+]?\\\\d+)\\\\s*)?)                  # captures the exponent \\n'\n\t                    + '(?<tipo>       ' + measures + ')                   # Capture kind of value \\n'\n\t                    + '((?:\\\\s+to)?\\\\s+ (?<destino>' + measures + '))?    # Get \"to\" syntax \\n'\n\t                    + '(\\\\s*)$                                            # whitespaces \\n'\n\t                , 'xi');\n\t\n\t            return xregexp.XRegExp.exec(input, inputRegex);\n\t    };\n\t\n\t    Medida.medidas = {};\n\t\n\t    Medida.convertir = function(valor) {\n\t        var measures = Medida.medidas;\n\t\n\t        measures.c = temperatura.Celsius;\n\t        measures.f = temperatura.Fahrenheit;\n\t        measures.k = temperatura.Kelvin;\n\t\n\t        var match = Medida.match(valor);\n\t\n\t        if (match) {\n\t            var numero = match.value,\n\t                tipo   =  match.tipo,\n\t                destino = match.destino;\n\t            try {\n\t                var source = new measures[tipo[0].toLowerCase()](numero);  // new Fahrenheit(32) //asumimos que la priemra letra es el tipo correcto\n\t                var target = \"to\"+measures[destino[0].toLowerCase()].name; // \"toCelsius\"\n\t                var checkTarget = new measures[destino[0].toLowerCase()](0);\n\t                if(!source.check(tipo) || !checkTarget.check(destino)) {\n\t                  throw \"Error de tipos\";\n\t                }\n\t                return source[target]().toFixed(2) + \" \"+target; // \"0 Celsius\"\n\t            }\n\t            catch(err) {\n\t                return 'Desconozco como convertir desde \"'+tipo+'\" hasta \"'+destino+'\"';\n\t            }\n\t        }\n\t        else\n\t            return \"Introduzca una temperatura valida: 330e-1 F to C\";\n\t    };\n\t\n\t    exports.Medida = Medida;\n\t})(this);\n\n\n/***/ }\n]);\n\n\n/** WEBPACK FOOTER **\n ** main.js\n **/","var xregexp = require('xregexp')\nvar temperatura = require('./temperatura');\n\n(function(exports) {\n    \"use strict\";\n    function main() {\n        var valor     = document.getElementById('convert').value,\n            elemento  = document.getElementById('converted');\n        elemento.innerHTML = Medida.convertir(valor);\n        return false;\n    }\n    exports.main = main;\n})(this);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./assets/js/conversor.js\n ** module id = 1\n ** module chunks = 0\n **/","var medida = require('./medida');\n\n(function(exports) {\n    \"use strict\";\n\n    function Temperatura(valor, tipo) {\n        Medida.call(this, valor, tipo);\n    }\n\n    function Celsius(valor) {\n        Temperatura.call(this, valor, \"c\");\n    }\n\n    Celsius.prototype = {\n        name: \"Celsius\",\n\n        check: function(tipo) {\n          return tipo.match(/(^c(?:e(?:l(?:s(?:i(?:u(?:s)?)?)?)?)?)?$)/i);\n        },\n\n        toFahrenheit: function() {\n            return ((this.valor * 9/5)+32);\n        },\n\n        toCelsius: function() {\n            return this.valor;\n        },\n\n        toKelvin: function() {\n          return this.valor + 273;\n        }\n    };\n\n    function Fahrenheit(valor) {\n        Temperatura.call(this, valor, \"f\");\n    }\n\n    Fahrenheit.prototype = {\n        name: \"Fahrenheit\",\n\n        check: function(tipo) {\n          return tipo.match(/(^f(?:a(?:h(?:r(?:e(?:n(?:h(?:e(?:i(?:t)?)?)?)?)?)?)?)?)?$)/i);\n        },\n\n        toCelsius: function() {\n            return ((this.valor - 32)*5/9);\n        },\n\n        toFahrenheit: function() {\n            return this.valor;\n        },\n\n        toKelvin: function() {\n          return this.toCelsius(this.valor) + 273;\n        }\n    };\n\n    function Kelvin(valor) {\n        Temperatura.call(this, valor, \"k\");\n    }\n\n    Kelvin.prototype = {\n        name: \"Kelvin\",\n\n        check: function(tipo) {\n          return tipo.match(/(k(?:e(?:l(?:v(?:i(?:n)?)?)?)?)?)/i);\n        },\n\n        toKelvin: function() {\n            return this.valor;\n        },\n\n        toCelsius: function() {\n            return ((this.valor) - 273);\n        },\n\n        toFahrenheit: function() {\n            return ((this.toCelsius(this.valor) * 9/5)+32);\n        }\n    };\n\n    exports.Temperatura = Temperatura;\n    exports.Celsius = Celsius;\n    exports.Fahrenheit = Fahrenheit;\n    exports.Kelvin = Kelvin;\n\n})(this);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./assets/js/temperatura.js\n ** module id = 11\n ** module chunks = 0\n **/","(function(exports) {\n    \"use strict\";\n\n    function Medida(valor,tipo) {\n        if (!tipo) {\n            var param = XRegExp(\"\"\n                                + \"(?<value>       [-+]?\\\\d+ (?:[\\\\.,]\\\\d*)?\\\\s* ) # Get number \\n\"\n                                + \"((e(?<exponent> [-+]?\\\\d+)\\\\s*)?)               # Get Exponent \\n\"\n                                + \"(?<measure>     [a-zA-Z]+)                      # Get kind\");\n            var m = XRegexExp.exec(valor, param);\n            this.valor = parseFloat(m.value) * Math.pow(10, parseInt(m.exponent));\n            this.tipo  = m.measure;\n        }\n        else {\n            this.valor = parseFloat(valor);\n            this.tipo  = tipo;\n        }\n\n    }\n\n    Medida.match = function (input) {\n            var measures = '[a-z]+';\n\n            var inputRegex = xregexp.XRegExp(\n                '^(\\\\s*)                                                  # whitespaces \\n'\n                    + '(?<value>       [-+]?\\\\d+ (?:[\\\\.,]\\\\d*)?\\\\s*)     # captures the number   \\n'\n                    + '((e(?<exponent> [-+]?\\\\d+)\\\\s*)?)                  # captures the exponent \\n'\n                    + '(?<tipo>       ' + measures + ')                   # Capture kind of value \\n'\n                    + '((?:\\\\s+to)?\\\\s+ (?<destino>' + measures + '))?    # Get \"to\" syntax \\n'\n                    + '(\\\\s*)$                                            # whitespaces \\n'\n                , 'xi');\n\n            return xregexp.XRegExp.exec(input, inputRegex);\n    };\n\n    Medida.medidas = {};\n\n    Medida.convertir = function(valor) {\n        var measures = Medida.medidas;\n\n        measures.c = temperatura.Celsius;\n        measures.f = temperatura.Fahrenheit;\n        measures.k = temperatura.Kelvin;\n\n        var match = Medida.match(valor);\n\n        if (match) {\n            var numero = match.value,\n                tipo   =  match.tipo,\n                destino = match.destino;\n            try {\n                var source = new measures[tipo[0].toLowerCase()](numero);  // new Fahrenheit(32) //asumimos que la priemra letra es el tipo correcto\n                var target = \"to\"+measures[destino[0].toLowerCase()].name; // \"toCelsius\"\n                var checkTarget = new measures[destino[0].toLowerCase()](0);\n                if(!source.check(tipo) || !checkTarget.check(destino)) {\n                  throw \"Error de tipos\";\n                }\n                return source[target]().toFixed(2) + \" \"+target; // \"0 Celsius\"\n            }\n            catch(err) {\n                return 'Desconozco como convertir desde \"'+tipo+'\" hasta \"'+destino+'\"';\n            }\n        }\n        else\n            return \"Introduzca una temperatura valida: 330e-1 F to C\";\n    };\n\n    exports.Medida = Medida;\n})(this);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./assets/js/medida.js\n ** module id = 12\n ** module chunks = 0\n **/"],"sourceRoot":""}